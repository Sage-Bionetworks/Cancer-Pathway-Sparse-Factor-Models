rmaFig <- ggplot(tmpDF, aes(Samples, EigenOne)) +
geom_point(aes(colour = tmpTx)) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab('EigenOne')
return(rmaFig)
}
roo <- vizData(foo)
too
roo
# function [4] for visualizing the data before adjustment
vizData <- function(z){
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = tmpTx))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
return(p4)
}
roo <- vizData(foo)
roo
z <- foo
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = tmpTx))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
p4
# function [4] for visualizing the data before adjustment
vizData <- function(z){
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(tmpTx))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
return(p4)
}
# function [4] for visualizing the data before adjustment
vizData <- function(z){
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(tmpTx)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
return(p4)
}
roo <- vizData(foo)
roo
foo <- rmaList[[7]]
roo <- vizData(foo)
roo
rm(list = ls())
load('testWorkspaceOne.RData')
beforeViz <- lapply(rmaList, vizData)
names(beforeViz) <- expNames
beforeViz[[1]]
beforeViz[[2]]
beforeViz[[3]]
beforeViz[[4]]
beforeViz[[5]]
beforeViz[[6]]
# function [4] for visualizing the data before adjustment
vizData <- function(z){
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(tmpTx)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
return(p4)
}
beforeViz <- lapply(rmaList, vizData)
beforeViz[[1]]
vizData <- function(z){
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(treatment)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
return(p4)
}
beforeViz <- lapply(rmaList, vizData)
beforeVis[[1]]
beforeViz[[1]]
z <- rmaList[[1]]
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(treatment)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
p4
for(i in 1:length(rmaList)){
beforeViz <- list()
thisDat <- rmaList[[i]]
thisFig <- vizData(thisDat)
beforeViz[[i]] <- thisFig
}
beforeViz
# visualize the unadjusted data in principle component space
beforeViz <- lapply(rmaList, vizData)
names(beforeViz) <- expNames
beforeViz
for(i in 1:7){
outList <- list()
z <- i
outList[[i]] <- z
}
outList
for(i in 1:7){
outList <- list()
z <- i
outList[i] <- z
}
outList
?list
list(1:7, NA)
?runif
as.list(rep(NA, 7))
for(i in 1:7){
outList <- as.list(rep(NA, 7))
z <- i
outList[i] <- z
}
outList
outList <- list()
for(i in 1:7){
z <- i
outList[i] <- z
}
outLIst
outList
beforeViz <- list()
for(i in 1:length(rmaList)){
thisDat <- rmaList[[i]]
thisFig <- vizData(thisDat)
beforeViz[[i]] <- thisFig
}
beforeViz
beforeViz <- list()
for(i in 1:length(rmaList)){
z <- rmaList[[i]]
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(treatment)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
beforeViz[i] <- p4
}
p4
i
bforeViz[i] <- p4
beforeViz[i] <- p4
beforeViz
beforeVis[1] <- 5
beforeViz[1] <- 5
beforeViz
class(p4)
beforeVis[1] <- p4
beforeViz[1] <- p4
beforeViz <- list()
for(i in 1:length(rmaList)){
z <- rmaList[[i]]
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(treatment)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
beforeViz[[i]] <- p4
}
beforeViz
rm(list = ls())
load('testWorkspaceOne.RData')
beforeViz <- list()
for(i in 1:length(rmaList)){
z <- rmaList[[i]]
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(treatment)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
beforeViz[[i]] <- p4
}
beforeViz
beforeViz[[3]]
str(beforeViz)
rm(list = ls())
load('testWorkspaceOne.RData')
beforeViz <- list()
for(i in 1:length(rmaList)){
z <- rmaList[[i]]
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
tmpFig <- ggplot(tmpDF, aes(Samples, EigenOne)) +
geom_point(aes(colour = factor(treatment))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab('EigenOne')
beforeViz[[i]] <- tmpFig
rm(tmpFig)
}
beforeViz
z <- rmaList[[i]]
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
tmpFig <- ggplot(tmpDF, aes(Samples, EigenOne)) +
geom_point(aes(colour = factor(treatment))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab('EigenOne')
tmpFig
tmpSvd
tmpSVD
?reshape2
?reshape
?melt
reshape(tmpDF)
install.packages("reshape2")
require(reshape2)
?reshape2
?reshape
# function [4] make visualization dataframes
vizDF <- function(z){
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
}
vizDataframes <- vizDF(rmaList)
beforeViz <- lapply(rmaList, vizData)
beforeViz[[1]]
z <- rmaList[[3]]
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(treatment)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
p4
z
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(treatment)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
p4
zoo <- vizData(rmaList[[4]])
zoo <- vizData(rmaList[[1]])
zoo
vizData <- function(z){
z <- z[[1]]
tmpSVD <- fs(exprs(z))
tmpDF <- as.data.frame(cbind(1:dim(z)[2], tmpSVD$v[ , 1]))
tmpPheno <- pData(z)
tmpTx <- tmpPheno[ , 2]
treatment <- tmpTx
colnames(tmpDF)[2] <- 'EigenOne'
colnames(tmpDF)[1] <- 'Samples'
p1 <- ggplot(tmpDF, aes(Samples, EigenOne))
p2 <- p1 + geom_point(aes(colour = factor(treatment)))
p3 <- p2 + opts(title = 'SVD Plot of Unadjusted Data')
p4 <- p3 + xlab('Samples') + ylab('EigenOne')
return(p4)
}
beforeViz <- lapply(rmaList, vizData)
z
q()
require(mGenomics)
require(synapseClient)
bCatEnt <- loadEntity(syn138507)
bCatEnt <- loadEntity('syn138507')
fits <- runWorkflow(bCatEnt$cacheDir, workflow = 'snm')
exprDat <- exprs(fits$hgu133a2[[1]])
# Create a treatment model matrix  (using the filename annotations)
treatment <- ifelse(grepl('bcat', list.files(ent$cacheDir)), "bCAT", "GFP")
treatment <- ifelse(grepl('bcat', list.files(bCatEnt$cacheDir)), "bCAT", "GFP")
X <- model.matrix(~ factor(treatment))
sigObj <- calcSig(exprDat, X)
?calcSig
sessionInfo()
source('http://depot.sagebase.org/CRAN.R')
pkgInstall('mGenomics')
sessionInfo()
require(snm)
require(snm)
sigObj <- calcSig(exprDat, X)
calcSig
pvalFoo <- sigObj$pval
head(pvalFoo)
require(ggplot2)
histFig <- qplot(pvalFoo, geom = 'histogram')
histFig
histFig <- qplot(sigObj$pval, geom = 'histogram') +
opts(title = 'P value distribution of transcripts') +
xlab('p values') +
ylab('Beta Catenin Effect on Gene Expression Variation')
histFi
histFig
svdObj <- fs(exprDat)
barFig <- qplot(svdObj$d, geom = 'bar')
barFig
dim(svdObj$d)
foo <- svdObj$d
foo
ggplot(foo) + geom_bar()
svdDF <- as.data.frame(rbind(svdObj$d, svdObj$v))
class(svdDF)
colnames(svdDF) <- c('percentVariance', paste('prinComp', 1:19, sep = '')
)
c('percentVariance', paste('prinComp', 1:19, sep = '')
)
svdDF <- as.data.frame(cbind(svdObj$d, svdObj$v))
colnames(svdDF) <- c('percentVariance', paste('prinComp', 1:19, sep = '')
colnames(svdDF) <- c('percentVariance', paste('prinComp', 1:19, sep = ''))
barFig <- ggplot2(svdDF, aes(percentVariance)) +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig <- ggplot(svdDF, aes(percentVariance)) +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
ggplot(svdDF, aes(percentVariance))
colnames(svdDF)
barFig <- ggplot(svdDF, aes(percentVariance)) +
geom_bar()
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig <- ggplot(svdDF, aes(percentVariance)) +
geom_bar() +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
barplot(svdObj$u)
barplot(svdObj$d)
barFig <- ggplot(svdDF, aes(percentVariance)) +
geom_bar() +
coord_flip() +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
svdDF <- as.data.frame(cbind(1:19, svdObj$d, svdObj$v))
colnames(svdDF) <- c('eigenGenes', 'percentVariance',
paste('prinComp', 1:19, sep = ''))
barFig <- ggplot(svdDF, aes(eigenGenes, percentVariance)) +
geom_bar() +
coord_flip() +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
barFig <- ggplot(svdDF, aes(percentVariance)) +
geom_area() +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
barFig <- ggplot(svdDF, aes(percentVariance)) +
geom_point() +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
svdDF <- as.data.frame(cbind(svdObj$d, svdObj$v))
colnames(svdDF) <- c('percentVariance',
paste('prinComp', 1:19, sep = ''))
barFig <- ggplot(svdDF, aes(percentVariance)) +
geom_point() +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
svdDF
plot(svdDF$percentVariance)
qplot(svdDF$percentVariance, geometry = 'point')
barFig <- ggplot(svdDF, aes(percentVariance)) +
geom_bar(stat = 'identity') +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
svdDF <- as.data.frame(cbind(1:19, svdObj$d, svdObj$v))
colnames(svdDF) <- c('eigenGene', 'percentVariance',
paste('prinComp', 1:19, sep = ''))
barFig <- ggplot(svdDF, aes(eigenGene, percentVariance)) +
geom_bar(stat = 'identity') +
opts(title = 'Percent Variance Explained by Each Eigengene') +
xlab('Eigengene') +
ylab('Percent Variance Explained')
barFig
eigenFig <- ggplot(svdDF, aes(eigenGene, prinComp1)) +
geom_point() +
opts(title = 'Eigengene loadings by Sample') +
xlab('Samples') +
ylab('Eigengene Loadings')
eigenFig
eigenFig <- ggplot(svdDF, aes(eigenGene, prinComp1)) +
geom_point(aes(colour = factor(treatment))) +
opts(title = 'Eigengene loadings by Sample') +
xlab('Samples') +
ylab('Eigengene Loadings')
eigenFig
foo <- -1*svdObj$v
image(foo)
image(svdObj$v)
svdDF <- as.data.frame(cbind(1:19, svdObj$d, -1*svdObj$v))
colnames(svdDF) <- c('eigenGene', 'percentVariance',
paste('prinComp', 1:19, sep = ''))
eigenFig <- ggplot(svdDF, aes(eigenGene, prinComp1)) +
geom_point(aes(colour = factor(treatment))) +
opts(title = 'Eigengene loadings by Sample') +
xlab('Samples') +
ylab('Eigengene Loadings')
eigenFig
eigenFig <- ggplot(svdDF, aes(eigenGene, prinComp1)) +
geom_point(aes(colour = factor(treatment))) +
opts(title = 'Eigengene 1 loadings by Sample') +
xlab('Samples') +
ylab('Eigengene 1 Loadings')
eigenFig
eigenFig1 <- ggplot(svdDF, aes(eigenGene, prinComp1)) +
geom_point(aes(colour = factor(treatment))) +
opts(title = 'Eigengene 1 loadings by Sample') +
xlab('Samples') +
ylab('Eigengene 1 Loadings')
eigenFig2 <- ggplot(svdDF, aes(eigenGene, prinComp2)) +
geom_point(aes(colour = factor(treatment))) +
opts(title = 'Eigengene 2 loadings by Sample') +
xlab('Samples') +
ylab('Eigengene 2 Loadings')
eigenFig2
?sweep
q()
