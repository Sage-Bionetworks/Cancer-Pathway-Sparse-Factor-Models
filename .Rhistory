opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
}
# function [4] for visualizing the data before adjustment
vizData <- function(rmaEset, pc = 1){
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- rmaEset$treatment
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
yName <- colnames(rmaDF)[pc + 1]
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
}
beforeViz <- lapply(rmaList, vizData)
names(beforeViz) <- theseData[ , 1]
names(beforeViz)
beforeViz[[1]]
beforeViz[[2]]
vizData <- function(rmaEset, pc = 1){
)
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- rmaEset$treatment
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
yName <- colnames(rmaDF)[pc + 1]
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
rmaFig
rmaEset <- rmaList[[5]]
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- rmaEset$treatment
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
yName <- colnames(rmaDF)[pc + 1]
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
rmaFig
# function [4] for visualizing the data before adjustment
vizData <- function(rmaEset, pc = 1){
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- rmaEset$treatment
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
}
beforeViz <- lapply(rmaList, vizData)
names(beforeViz) <- theseData[ , 1]
beforeViz[[1]]
beforeViz[[2]]
str(beforeViz)
beforeViz[[5]]
names(beforeViz)
beforeViz$Ectopic Myc
foo1 <- beforeViz[[1]]
foo2 <- beforeViz[[2]]
foo1
foo2
for(i in 1:length(rmaList)){
beforeViz <- list()
thisDat <- rmaList[[i]]
thisFig <- vizData(thisDat)
beforeViz[[i]] <- thisFig
}
beforeVis[[1]]
beforeViz[[1]]
str(beforeViz)
str(rmaList)
length(rmaList)
beforeViz
vizData(rmaList[[1]])
vizData(rmaList[[2]])
vizData(rmaList[[3]])
names(rmaList)
rm(list = ls())
q()
options(stringsAsFactors = F)
#####
## REQUIRE LIBRARIES
#####
require(synapseClient)
require(affy)
require(corpcor)
require(car)
require(ggplot2)
#####
## BRING IN ANY NECESSARY SYNAPSE CODE ENTITIES
####
multiPlotEnt <- loadEntity('syn274067')
attach(multiPlotEnt)
#####
## DEFINE FUNCTIONS
#####
# function [1] standardized fast svd
fs <-function(x){
u <- fast.svd(t(scale(t(x), scale = FALSE)), tol = 0)
u$d <- u$d^2/sum(u$d^2)
u
}
# function [2] rma normalization and creating esets
makeEsets <- function(x){
tmp <- downloadEntity(x)
tmpAB <- ReadAffy(celfile.path = tmp$cacheDir)
rmaEset <- rma(tmpAB, normalize=T, background=F)
treatment <- ifelse(grepl(annotValue(tmp, "treatmentString"),
tolower(sampleNames(rmaEset))), 1, 0)
tmpPhen <- pData(rmaEset)
tmpPhen$treatment <- treatment
pData(rmaEset) <- tmpPhen
return(rmaEset)
}
# function [3] removing treatment effects (to identify outliers)
removeTx <- function(x){
tmpExpress <- exprs(x)
tmpTreatment <- x$treatment
treatMM <- model.matrix(~ factor(tmpTreatment))
tmpMat <- tmpExpress - t(treatMM %*% solve(t(treatMM) %*% treatMM) %*%
t(treatMM) %*% t(tmpExpress))
svdObj <- fs(tmpMat)
return(list('svdObj' = svdObj, "tmpMat" <- tmpMat))
}
# function [4] for visualizing the data before adjustment
vizData <- function(rmaEset, pc = 1){
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- rmaEset$treatment
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
}
multiPlotEnt
theseData <-
synapseQuery('SELECT id, name FROM entity WHERE entity.parentId == "syn162399"')
# rma normalize the constituent raw datasets and wrap them up as esets
rmaList <- lapply(as.list(theseData$entity.id), makeEsets)
names(rmaList) <- theseData[ , 1]
names(rmaList)
image(exprs(rmaList[[1]]))
image(exprs(rmaList[[2]]))
bleachList <- lapply(rmaList, removeTx)
names(bleachList) <- theseData[ , 1]
beforeViz <- lapply(rmaList, vizData)
names(beforeViz) <- theseData[ , 1]
beforeVis[[1]]
beforeViz[[1]]
?strrep
?gsub
theseData[ ,1]
class(theseData[ ,1])
gsub(' ', '', theseData[ ,1])
expNames <- gsub(' ', '', theseData[ , 1])
names(rmaList) <- expNames
names(bleachList) <- expNames
names(beforeViz) <- expNames
beforeViz <- lapply(rmaList, vizData)
names(beforeViz) <- expNames
beforeViz$EctopicBetaCatenin
pData(rmaList[[1]])
foo <- rmaList[[1]]
sessionInfo()
pData(foo)
str(pData(foo))
pData(foo)[ ,2]
rmaTx <- pData(rmaEset)[ , 2]
# function [4] for visualizing the data before adjustment
vizData <- function(rmaEset, pc = 1){
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(rmaEset)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
}
beforeViz <- lapply(rmaList, vizData)
beforeViz
str(beforeViz)
beforeViz[[1]]
beforeViz[[2]]
rmaEset <- rmaList[[1]]
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(rmaEset)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
pc <- 1
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
rmaFig
beforeViz <- lapply(rmaList, vizData)
beforeVis[[2]]
beforeViz[[2]]
zoo <- vizData(rmaEset)
zoo
rmaEset <- rmaList[[4]]
zoo <- vizData(rmaEset)
zoo
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(rmaEset)[ , 2]
dim(rmaSVD)
dim(exprs(rmaEset))
zoo <- fs(exprs(rmaEset))
dim(zoo)
dim(zoo$v)
dim(rmaDF)
rmaTx <- pData(rmaEset)[ , 2]
rmaTx
length(rmaTx)
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaDF
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
rmaFig
zoo <- vizData(rmaEset, pc = 1)
zoo
rmaEset <- rmaList[[7]]
zoo <- vizData(rmaEset, pc = 1)
zoo
# function [4] for visualizing the data before adjustment
vizData <- function(rmaEset, pc = 1){
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(rmaEset)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(rmaEset, pc = 1)
zoo
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(rmaEset)[ , 2]
dim(rmaDF)
length(rmaTx)
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
rmaFig
# function [4] for visualizing the data before adjustment
vizData <- function(rmaEset){
pc <- 1
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(rmaEset)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , pc + 1])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(rmaEset)
zoo
rmaEset <- rmaList[[6]]
zoo <- vizData(rmaEset)
zoo
# function [4] for visualizing the data before adjustment
vizData <- function(rmaEset){
rmaSVD <- fs(exprs(rmaEset))
rmaDF <- as.data.frame(cbind(1:dim(rmaEset)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(rmaEset)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , 2])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(rmaEset)
zoo
debug(vizData)
zoo <- vizData(rmaEset)
zoo
str(zoo)
# function [4] for visualizing the data before adjustment
vizData <- function(x){
rmaSVD <- fs(exprs(x))
rmaDF <- as.data.frame(cbind(1:dim(x)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(x)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , 2])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(rmaEset)
zoo
# function [4] for visualizing the data before adjustment
vizData <- function(z){
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(x)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , 2])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(rmaEset)
# function [4] for visualizing the data before adjustment
vizData <- function(z){
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(z)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], rmaDF[ , 2])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(rmaEset)
zoo
# function [4] for visualizing the data before adjustment
vizData <- function(z){
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(z)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(x = rmaDF[ , 1], y = rmaDF[ , 2])) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(rmaEset)
zoo
# function [4] for visualizing the data before adjustment
vizData <- function(z){
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(z)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(Samples, Eigen1)) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(rmaEset)
zoo
z <- rmaList[[3]]
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1:3]))
rmaTx <- pData(z)[ , 2]
colnames(rmaDF)[2:4] <- paste('Eigen', 1:3, sep = '')
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(Samples, Eigen1)) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab(paste('EigenGene', pc))
return(rmaFig)
rmaFig
length(rmaTx)
dim(rmaDF)
zoo
vizData <- function(z){
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1]))
rmaTx <- pData(z)[ , 2]
colnames(rmaDF)[2] <- 'EigenOne'
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(Samples, EigenOne)) +
geom_point(aes(colour = factor(rmaTx))) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab('EigenOne')
return(rmaFig)
rm(list = ls())
}
zoo <- vizData(z)
zoo
z <- rmaList[[7]]
zoo <- vizData(z)
zoo
poo <- vizData(z)
poo
rm(beforeViz)
for(i in 1:length(rmaList)){
beforeViz <- list()
thisDat <- rmaList[[i]]
thisFig <- vizData(thisDat)
beforeViz[[i]] <- thisFig
}
beforeViz[[1]]
beforeViz
i = 4
beforeViz <- list()
thisDat <- rmaList[[i]]
thisFig <- vizData(thisDat)
beforeViz[[i]] <- thisFig
beforeViz
str(beforeViz[[4]])
foo <- beforeViz[[4]]
foo
foo$layers
# function [4] for visualizing the data before adjustment
vizData <- function(z){
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1]))
rmaTx <- pData(z)[ , 2]
colnames(rmaDF)[2] <- 'EigenOne'
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(Samples, EigenOne)) +
geom_point(aes(colour = rmaTx)) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab('EigenOne')
return(rmaFig)
rm(list = ls())
}
foo <- vizData(rmaEset)
foo
vizData <- function(z){
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1]))
rmaTx <- as.factor(pData(z)[ , 2])
colnames(rmaDF)[2] <- 'EigenOne'
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(Samples, EigenOne)) +
geom_point(aes(colour = rmaTx)) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab('EigenOne')
return(rmaFig)
rm(list = ls())
}
foo <- vizData(rmaEset)
foo
foo <- vizData(rmaEset)
foo
rmaSVD <- fs(exprs(z))
rmaDF <- as.data.frame(cbind(1:dim(z)[2], rmaSVD$v[ , 1]))
rmaTx <- as.factor(pData(z)[ , 2])
rmaTx
colnames(rmaDF)[2] <- 'EigenOne'
colnames(rmaDF)[1] <- 'Samples'
rmaFig <- ggplot(rmaDF, aes(Samples, EigenOne)) +
geom_point(aes(colour = rmaTx)) +
opts(title = 'SVD Plot of Unadjusted Data') +
xlab('Samples') + ylab('EigenOne')
rmaFig
rm(list = ls())
options(stringsAsFactors = F)
#####
## REQUIRE LIBRARIES
#####
require(synapseClient)
require(affy)
require(corpcor)
require(car)
require(ggplot2)
#####
## BRING IN ANY NECESSARY SYNAPSE CODE ENTITIES
####
multiPlotEnt <- loadEntity('syn274067')
attach(multiPlotEnt)
rm(list = ls())
q()
